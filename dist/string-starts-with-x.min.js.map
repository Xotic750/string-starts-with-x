{"version":3,"sources":["webpack://stringStartsWithX/webpack/universalModuleDefinition","webpack://stringStartsWithX/webpack/bootstrap","webpack://stringStartsWithX/./node_modules/is-symbol/index.js","webpack://stringStartsWithX/./node_modules/is-primitive/index.js","webpack://stringStartsWithX/./node_modules/is-date-object/index.js","webpack://stringStartsWithX/./node_modules/is-string/index.js","webpack://stringStartsWithX/./node_modules/has-symbols/index.js","webpack://stringStartsWithX/(webpack)/buildin/global.js","webpack://stringStartsWithX/./node_modules/has-symbols/shams.js","webpack://stringStartsWithX/../src/attempt-x.js","webpack://stringStartsWithX/../src/white-space-x.js","webpack://stringStartsWithX/../src/has-symbol-support-x.js","webpack://stringStartsWithX/../src/to-boolean-x.js","webpack://stringStartsWithX/../src/to-string-tag-x.js","webpack://stringStartsWithX/../src/has-to-string-tag-x.js","webpack://stringStartsWithX/../src/is-nil-x.js","webpack://stringStartsWithX/../src/require-object-coercible-x.js","webpack://stringStartsWithX/../src/to-string-x.js","webpack://stringStartsWithX/../src/require-coercible-to-string-x.js","webpack://stringStartsWithX/../src/trim-left-x.js","webpack://stringStartsWithX/../src/trim-right-x.js","webpack://stringStartsWithX/../src/trim-x.js","webpack://stringStartsWithX/../src/normalize-space-x.js","webpack://stringStartsWithX/../src/replace-comments-x.js","webpack://stringStartsWithX/../src/is-function-x.js","webpack://stringStartsWithX/../src/to-primitive-x.js","webpack://stringStartsWithX/../src/nan-x.js","webpack://stringStartsWithX/../src/parse-int-x.js","webpack://stringStartsWithX/../src/to-number-x.js","webpack://stringStartsWithX/../src/is-nan-x.js","webpack://stringStartsWithX/../src/is-finite-x.js","webpack://stringStartsWithX/../src/infinity-x.js","webpack://stringStartsWithX/../src/math-sign-x.js","webpack://stringStartsWithX/../src/to-integer-x.js","webpack://stringStartsWithX/../src/is-object-like-x.js","webpack://stringStartsWithX/../src/to-object-x.js","webpack://stringStartsWithX/../src/to-property-key-x.js","webpack://stringStartsWithX/../src/object-get-own-property-descriptor-x.js","webpack://stringStartsWithX/../src/has-own-property-x.js","webpack://stringStartsWithX/../src/to-string-symbols-supported-x.js","webpack://stringStartsWithX/../src/math-clamp-x.js","webpack://stringStartsWithX/../src/is-index-x.js","webpack://stringStartsWithX/../src/property-is-enumerable-x.js","webpack://stringStartsWithX/../src/object-define-property-x.js","webpack://stringStartsWithX/../src/assert-is-object-x.js","webpack://stringStartsWithX/../src/string-starts-with-x.js","webpack://stringStartsWithX/../src/is-regexp-x.js"],"names":["root","factory","exports","module","define","amd","self","window","global","Function","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","toStr","toString","symToStr","symStringRegex","valueOf","test","isSymbolObject","e","val","getDay","Date","hasToStringTag","tryDateObject","strValue","String","tryStringObject","origSymbol","hasSymbolSham","g","this","getOwnPropertySymbols","iterator","obj","sym","symObj","keys","length","getOwnPropertyNames","syms","propertyIsEnumerable","getOwnPropertyDescriptor","descriptor","attempt_x_esm","fn","_len","arguments","args","Array","_key","threw","apply","hasSymbolSupport","_newArrowCheck","is_symbol_default","undefined","has_symbol_support_x_esm","to_boolean_x_esm","nativeObjectToString","to_string_tag_x_esm","has_to_string_tag_x_esm","is_nil_x_esm","require_object_coercible_x_esm","TypeError","concat","ERROR_MESSAGE","castString","constructor","to_string_x_esm","require_coercible_to_string_x_esm","list","code","description","es5","es2015","es2016","es2017","es2018","string","stringES2016","stringES2018","white_space_x_esm_length","white_space_x_esm_i","white_space_x_esm","string2016","EMPTY_STRING","RegExpCtr","reLeft","replace","trim_left_x_esm","trim_right_x_esm_EMPTY_STRING","trim_right_x_esm_RegExpCtr","reRight2018","trim_right_x_esm_replace","trim_right_x_esm","trim_x_esm","SPACE","normalize_space_x_esm_RegExpCtr","reNormalize2018","normalize_space_x_esm_replace","normalize_space_x_esm","STRIP_COMMENTS","replace_comments_x_esm_replace","replace_comments_x_esm","replacement","FunctionCtr","castBoolean","fToString","ctrRx","hasNativeClass","is_function_x_esm_newArrowCheck","testClassstring","isES6ClassFn","result","is_function_x_esm","allowClass","is_primitive_default","tryFuncToString","strTag","StringCtr","NumberCtr","symToPrimitive","toPrimitive","symValueOf","toStringOrder","toNumberOrder","ordinaryToPrimitive","ordinary","hint","method","methodNames","getHint","supplied","to_primitive_x_esm_getExoticToPrim","func","getMethod","to_primitive_x_esm","input","preferredType","exoticToPrim","newHint","is_date_object_default","nan_x_esm","nativeParseInt","parseInt","castNumber","charAt","hexRegex","parse_int_x_esm_test","parse_int_x_esm","radix","str","binaryRadix","octalRadix","testCharsCount","to_number_x_esm_ERROR_MESSAGE","to_number_x_esm_castNumber","pStrSlice","slice","binaryRegex","RegExpConstructor","to_number_x_esm_test","isBinary","octalRegex","isOctal","nonWSregex2018","invalidHexLiteral","isInvalidHexLiteral","to_number_x_esm","toNumber2018","argument","hasNonWS2018","trimmed","is_nan_x_esm","is_finite_x_esm","number","math_sign_x_esm","x","abs","Math","floor","to_integer_x_esm","is_object_like_x_esm","castObject","to_object_x_esm","getOPDFallback1","getOPDFallback2","$getOwnPropertyDescriptor","to_property_key_x_esm","_typeof","hop","has_own_property_x_esm","pToString","isSymbolFn","a","to_string_symbols_supported_x_esm_castString","to_string_symbols_supported_x_esm","math_clamp_x_esm","argsLength","max","min","RangeError","reIsUint","rxTest","is_index_x_esm","propIsEnumerable","property_is_enumerable_x_esm","object_get_own_property_descriptor_x_esm_castObject","object_get_own_property_descriptor_x_esm_castBoolean","nativeGOPD","object_get_own_property_descriptor_x_esm_doesGOPDWork","prop","testResult","doc","document","createElement","res","worksWithPrim","lookupGetter","lookupSetter","prototypeOfObject","supportsAccessors","lg","__lookupGetter__","ls","__lookupSetter__","propKey","isStringIndex","is_string_default","configurable","__proto__","notPrototypeOfObject","setter","set","writable","definePropertyFallback","$defineProperty","object_get_own_property_descriptor_x_esm","assert_is_object_x_esm","object_define_property_x_esm_castBoolean","nativeDefProp","toPropertyDescriptor","desc","testWorksWith","object_define_property_x_esm_doc","defineGetter","defineSetter","object_define_property_x_esm_lookupGetter","object_define_property_x_esm_lookupSetter","object_define_property_x_esm_prototypeOfObject","object_define_property_x_esm_supportsAccessors","__defineGetter__","__defineSetter__","propDesc","isWorking","object_define_property_x_esm","regexExec","exec","is_regexp_x_esm","lastIndex","tryRegexExecCall","ERR_MSG","sw","startsWith","nativeStartsWith","string_starts_with_x_esm_res","ssw","searchString","searchStr","position","start","__webpack_exports__"],"mappings":"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","file":"string-starts-with-x.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"stringStartsWithX\"] = factory();\n\telse\n\t\troot[\"stringStartsWithX\"] = factory();\n})((function () {\n  'use strict';\n\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n\n  return Function('return this')();\n}()), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar hasSymbols = require('has-symbols')();\n\nif (hasSymbols) {\n\tvar symToStr = Symbol.prototype.toString;\n\tvar symStringRegex = /^Symbol\\(.*\\)$/;\n\tvar isSymbolObject = function isRealSymbolObject(value) {\n\t\tif (typeof value.valueOf() !== 'symbol') {\n\t\t\treturn false;\n\t\t}\n\t\treturn symStringRegex.test(symToStr.call(value));\n\t};\n\n\tmodule.exports = function isSymbol(value) {\n\t\tif (typeof value === 'symbol') {\n\t\t\treturn true;\n\t\t}\n\t\tif (toStr.call(value) !== '[object Symbol]') {\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\treturn isSymbolObject(value);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n} else {\n\n\tmodule.exports = function isSymbol(value) {\n\t\t// this environment does not support Symbols.\n\t\treturn false && value;\n\t};\n}\n","/*!\n * is-primitive <https://github.com/jonschlinkert/is-primitive>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isPrimitive(val) {\n  if (typeof val === 'object') {\n    return val === null;\n  }\n  return typeof val !== 'function';\n};\n","'use strict';\n\nvar getDay = Date.prototype.getDay;\nvar tryDateObject = function tryDateObject(value) {\n\ttry {\n\t\tgetDay.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\nvar toStr = Object.prototype.toString;\nvar dateClass = '[object Date]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isDateObject(value) {\n\tif (typeof value !== 'object' || value === null) { return false; }\n\treturn hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;\n};\n","'use strict';\n\nvar strValue = String.prototype.valueOf;\nvar tryStringObject = function tryStringObject(value) {\n\ttry {\n\t\tstrValue.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar strClass = '[object String]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isString(value) {\n\tif (typeof value === 'string') { return true; }\n\tif (typeof value !== 'object') { return false; }\n\treturn hasToStringTag ? tryStringObject(value) : toStr.call(value) === strClass;\n};\n","'use strict';\n\nvar origSymbol = global.Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\n/* eslint complexity: [2, 17], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","/**\n * This method attempts to invoke the function, returning either the result or\n * the caught error object. Any additional arguments are provided to the\n * function when it's invoked.\n *\n * @param {Function} [fn] - The function to attempt.\n * @param {...*} [args] - The arguments to invoke the function with.\n * @returns {object} Returns an object of the result.\n */\nconst attempt = function attempt(fn, ...args) {\n  try {\n    return {\n      threw: false,\n      /* eslint-disable-next-line babel/no-invalid-this */\n      value: fn.apply(this, args),\n    };\n  } catch (e) {\n    return {\n      threw: true,\n      value: e,\n    };\n  }\n};\n\nexport default attempt;\n","/**\n * A record of a white space character.\n *\n * @typedef {object} CharRecord\n * @property {number} code - The character code.\n * @property {string} description - A description of the character.\n * @property {boolean} es5 - Whether the spec lists this as a white space.\n * @property {boolean} es2015 - Whether the spec lists this as a white space.\n * @property {boolean} es2016 - Whether the spec lists this as a white space.\n * @property {boolean} es2017 - Whether the spec lists this as a white space.\n * @property {boolean} es2018 - Whether the spec lists this as a white space.\n * @property {string} string - The character string.\n */\n\n/**\n * An array of the whitespace char codes, string, descriptions and language\n * presence in the specifications.\n *\n * @type Array.<CharRecord>\n */\nexport const list = [\n  {\n    code: 0x0009,\n    description: 'Tab',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u0009',\n  },\n  {\n    code: 0x000a,\n    description: 'Line Feed',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000a',\n  },\n  {\n    code: 0x000b,\n    description: 'Vertical Tab',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000b',\n  },\n  {\n    code: 0x000c,\n    description: 'Form Feed',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000c',\n  },\n  {\n    code: 0x000d,\n    description: 'Carriage Return',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000d',\n  },\n  {\n    code: 0x0020,\n    description: 'Space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u0020',\n  },\n  /*\n  {\n    code: 0x0085,\n    description: 'Next line',\n    es5: false,\n    es2015: false,\n    es2016: false,\n    es2017: false,\n    es2018: false,\n    string: '\\u0085'\n  }\n  */\n  {\n    code: 0x00a0,\n    description: 'No-break space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u00a0',\n  },\n  {\n    code: 0x1680,\n    description: 'Ogham space mark',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u1680',\n  },\n  {\n    code: 0x180e,\n    description: 'Mongolian vowel separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: false,\n    es2018: false,\n    string: '\\u180e',\n  },\n  {\n    code: 0x2000,\n    description: 'En quad',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2000',\n  },\n  {\n    code: 0x2001,\n    description: 'Em quad',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2001',\n  },\n  {\n    code: 0x2002,\n    description: 'En space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2002',\n  },\n  {\n    code: 0x2003,\n    description: 'Em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2003',\n  },\n  {\n    code: 0x2004,\n    description: 'Three-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2004',\n  },\n  {\n    code: 0x2005,\n    description: 'Four-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2005',\n  },\n  {\n    code: 0x2006,\n    description: 'Six-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2006',\n  },\n  {\n    code: 0x2007,\n    description: 'Figure space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2007',\n  },\n  {\n    code: 0x2008,\n    description: 'Punctuation space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2008',\n  },\n  {\n    code: 0x2009,\n    description: 'Thin space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2009',\n  },\n  {\n    code: 0x200a,\n    description: 'Hair space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u200a',\n  },\n  /*\n  {\n    code: 0x200b,\n    description: 'Zero width space',\n    es5: false,\n    es2015: false,\n    es2016: false,\n    es2017: false,\n    es2018: false,\n    string: '\\u200b'\n  },\n  */\n  {\n    code: 0x2028,\n    description: 'Line separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2028',\n  },\n  {\n    code: 0x2029,\n    description: 'Paragraph separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2029',\n  },\n  {\n    code: 0x202f,\n    description: 'Narrow no-break space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u202f',\n  },\n  {\n    code: 0x205f,\n    description: 'Medium mathematical space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u205f',\n  },\n  {\n    code: 0x3000,\n    description: 'Ideographic space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u3000',\n  },\n  {\n    code: 0xfeff,\n    description: 'Byte Order Mark',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\ufeff',\n  },\n];\n\n/**\n * A string of the ES5 to ES2016 whitespace characters.\n *\n * @type string\n */\nlet stringES2016 = '';\n\n/**\n * A string of the ES2017 to ES2018 whitespace characters.\n *\n * @type string\n */\nlet stringES2018 = '';\nconst {length} = list;\nfor (let i = 0; i < length; i += 1) {\n  if (list[i].es2016) {\n    stringES2016 += list[i].string;\n  }\n\n  if (list[i].es2018) {\n    stringES2018 += list[i].string;\n  }\n}\n\nconst string2018 = stringES2018;\n\nexport default string2018;\nexport const string2016 = stringES2016;\n","import attempt from 'attempt-x';\nimport isSymbol from 'is-symbol';\n\nconst hasSymbolSupport = attempt(() => {\n  /* eslint-disable-next-line compat/compat */\n  return typeof Symbol === 'function' && isSymbol(Symbol(''));\n});\n\n/**\n * Indicates if `Symbol`exists and creates the correct type.\n * `true`, if it exists and creates the correct type, otherwise `false`.\n *\n * @type boolean\n */\nexport default hasSymbolSupport.threw === false && hasSymbolSupport.value === true;\n","/**\n * The abstract operation ToBoolean converts argument to a value of type Boolean.\n *\n * @param {*} [value] - The value to be converted.\n * @returns {boolean} 'true' if value is truthy; otherwise 'false'.\n */\nconst toBoolean = function toBoolean(value) {\n  return !!value;\n};\n\nexport default toBoolean;\n","const nativeObjectToString = {}.toString;\n\n/**\n * The `toStringTag` method returns \"[object type]\", where type is the\n * object type.\n *\n * @param {*} [value] - The object of which to get the object type string.\n * @returns {string} The object type string.\n */\nconst toStringTag = function toStringTag(value) {\n  if (value === null) {\n    return '[object Null]';\n  }\n\n  if (typeof value === 'undefined') {\n    return '[object Undefined]';\n  }\n\n  return nativeObjectToString.call(value);\n};\n\nexport default toStringTag;\n","import hasSymbols from 'has-symbol-support-x';\nimport isSymbol from 'is-symbol';\n\n/**\n * Indicates if `Symbol.toStringTag`exists and is the correct type.\n * `true`, if it exists and is the correct type, otherwise `false`.\n *\n * @type boolean\n */\nexport default hasSymbols &&\n  /* eslint-disable-next-line compat/compat */\n  isSymbol(Symbol.toStringTag);\n","/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @param {*} [value] - The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n */\nconst isNil = function isNil(value) {\n  /* eslint-disable-next-line lodash/prefer-is-nil */\n  return value === null || typeof value === 'undefined';\n};\n\nexport default isNil;\n","import isNil from 'is-nil-x';\n\n/**\n * The abstract operation RequireObjectCoercible throws an error if argument\n * is a value that cannot be converted to an Object using ToObject.\n *\n * @param {*} [value] - The `value` to check.\n * @throws {TypeError} If `value` is a `null` or `undefined`.\n * @returns {string} The `value`.\n */\nconst requireObjectCoercible = function requireObjectCoercible(value) {\n  if (isNil(value)) {\n    throw new TypeError(`Cannot call method on ${value}`);\n  }\n\n  return value;\n};\n\nexport default requireObjectCoercible;\n","import isSymbol from 'is-symbol';\n\nconst ERROR_MESSAGE = 'Cannot convert a Symbol value to a string';\nconst castString = ERROR_MESSAGE.constructor;\n/**\n * The abstract operation ToString converts argument to a value of type String.\n *\n * @param {*} [value] - The value to convert to a string.\n * @throws {TypeError} If `value` is a Symbol.\n * @returns {string} The converted value.\n */\nconst ToString = function ToString(value) {\n  if (isSymbol(value)) {\n    throw new TypeError(ERROR_MESSAGE);\n  }\n\n  return castString(value);\n};\n\nexport default ToString;\n","import requireObjectCoercible from 'require-object-coercible-x';\nimport toStr from 'to-string-x';\n\n/**\n * This method requires an argument is corecible then converts using ToString.\n *\n * @param {*} [value] - The value to converted to a string.\n * @throws {TypeError} If value is null or undefined.\n * @returns {string} The value as a string.\n */\nconst requireCoercibleToString = function requireCoercibleToString(value) {\n  return toStr(requireObjectCoercible(value));\n};\n\nexport default requireCoercibleToString;\n","import requireCoercibleToString from 'require-coercible-to-string-x';\nimport whiteSpace, {string2016} from 'white-space-x';\n\nconst EMPTY_STRING = '';\nconst RegExpCtr = /none/.constructor;\nconst reLeft2016 = new RegExpCtr(`^[${string2016}]+`);\nconst reLeft = new RegExpCtr(`^[${whiteSpace}]+`);\nconst {replace} = EMPTY_STRING;\n\n/**\n * This method removes whitespace from the left end of a string. (ES2016).\n *\n * @param {string} [string] - The string to trim the left end whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The left trimmed string.\n */\nexport function trimLeft2016(string) {\n  return replace.call(requireCoercibleToString(string), reLeft2016, EMPTY_STRING);\n}\n\n/**\n * This method removes whitespace from the left end of a string. (ES2018).\n *\n * @param {string} [string] - The string to trim the left end whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The left trimmed string.\n */\nconst trimLeft2018 = function trimLeft2018(string) {\n  return replace.call(requireCoercibleToString(string), reLeft, EMPTY_STRING);\n};\n\nexport default trimLeft2018;\n","import requireCoercibleToString from 'require-coercible-to-string-x';\nimport whiteSpace, {string2016} from 'white-space-x';\n\nconst EMPTY_STRING = '';\nconst RegExpCtr = /none/.constructor;\nconst reRight2016 = new RegExpCtr(`[${string2016}]+$`);\nconst reRight2018 = new RegExpCtr(`[${whiteSpace}]+$`);\nconst {replace} = EMPTY_STRING;\n\n/**\n * This method removes whitespace from the right end of a string. (ES2016).\n *\n * @param {string} [string] - The string to trim the right end whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The right trimmed string.\n */\nexport function trimRight2016(string) {\n  return replace.call(requireCoercibleToString(string), reRight2016, EMPTY_STRING);\n}\n\n/**\n * This method removes whitespace from the right end of a string. (ES2018).\n *\n * @param {string} [string] - The string to trim the right end whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The right trimmed string.\n */\nconst trimRight2018 = function trimRight2018(string) {\n  return replace.call(requireCoercibleToString(string), reRight2018, EMPTY_STRING);\n};\n\nexport default trimRight2018;\n","import trimLeft, {trimLeft2016} from 'trim-left-x';\nimport trimRight, {trimRight2016} from 'trim-right-x';\n\n/**\n * This method removes whitespace from the left and right end of a string.\n * (ES2016).\n *\n * @param {string} [string] - The string to trim the whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The trimmed string.\n */\nexport function trim2016(string) {\n  return trimLeft2016(trimRight2016(string));\n}\n\n/**\n * This method removes whitespace from the left and right end of a string.\n * (ES2018).\n *\n * @param {string} [string] - The string to trim the whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The trimmed string.\n */\nconst trim2018 = function trim2018(string) {\n  return trimLeft(trimRight(string));\n};\n\nexport default trim2018;\n","import trim, {trim2016} from 'trim-x';\nimport whiteSpace, {string2016} from 'white-space-x';\n\nconst SPACE = ' ';\nconst RegExpCtr = /none/.constructor;\nconst reNormalize2016 = new RegExpCtr(`[${string2016}]+`, 'g');\nconst reNormalize2018 = new RegExpCtr(`[${whiteSpace}]+`, 'g');\nconst {replace} = SPACE;\n\n/**\n * This method strips leading and trailing white-space from a string,\n * replaces sequences of whitespace characters by a single space,\n * and returns the resulting string. (ES2016).\n *\n * @param {string} [string] - The string to be normalized.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The normalized string.\n */\nexport function normalizeSpace2016(string) {\n  return replace.call(trim2016(string), reNormalize2016, SPACE);\n}\n\n/**\n * This method strips leading and trailing white-space from a string,\n * replaces sequences of whitespace characters by a single space,\n * and returns the resulting string. (ES2018).\n *\n * @param {string} [string] - The string to be normalized.\n * @throws {TypeError} If string is null or undefined or not coercible.\n */\nconst normalizeSpace2018 = function normalizeSpace2018(string) {\n  return replace.call(trim(string), reNormalize2018, SPACE);\n};\n\nexport default normalizeSpace2018;\n","import toStr from 'to-string-x';\nimport requireCoercibleToString from 'require-coercible-to-string-x';\n\nconst EMPTY_STRING = '';\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/gm;\nconst {replace} = EMPTY_STRING;\n\n/**\n * This method replaces comments in a string.\n *\n * @param {string} [string] - The string to be stripped.\n * @param {string} [replacement=''] - The string to be used as a replacement.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @throws {TypeError} If replacement is not coercible.\n * @returns {string} The new string with the comments replaced.\n */\nconst replaceComments = function replaceComments(string, replacement) {\n  return replace.call(requireCoercibleToString(string), STRIP_COMMENTS, arguments.length > 1 ? toStr(replacement) : EMPTY_STRING);\n};\n\nexport default replaceComments;\n","import attempt from 'attempt-x';\nimport toBoolean from 'to-boolean-x';\nimport toStringTag from 'to-string-tag-x';\nimport hasToStringTag from 'has-to-string-tag-x';\nimport isPrimitive from 'is-primitive';\nimport normalise from 'normalize-space-x';\nimport deComment from 'replace-comments-x';\n\nconst FunctionCtr = attempt.constructor;\nconst castBoolean = true.constructor;\nconst SPACE = ' ';\nconst fToString = attempt.toString;\nconst funcTag = '[object Function]';\nconst genTag = '[object GeneratorFunction]';\nconst asyncTag = '[object AsyncFunction]';\nconst ctrRx = /^class /;\nconst {test} = ctrRx;\n\nconst hasNativeClass =\n  attempt(() => {\n    /* eslint-disable-next-line babel/new-cap */\n    return FunctionCtr('\"use strict\"; return class My {};')();\n  }).threw === false;\n\nconst testClassstring = function _testClassstring(value) {\n  return test.call(ctrRx, normalise(deComment(fToString.call(value), SPACE)));\n};\n\nconst isES6ClassFn = function isES6ClassFunc(value) {\n  const result = attempt(testClassstring, value);\n\n  return result.threw === false && result.value;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @private\n * @param {*} value - The value to check.\n * @param {boolean} allowClass - Whether to filter ES6 classes.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n * else `false`.\n */\nconst tryFuncToString = function funcToString(value, allowClass) {\n  if (hasNativeClass && allowClass === false && isES6ClassFn(value)) {\n    return false;\n  }\n\n  return attempt.call(value, fToString).threw === false;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @param {*} value - The value to check.\n * @param {boolean} [allowClass=false] - Whether to filter ES6 classes.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n * else `false`.\n */\nconst isFunction = function isFunction(value, allowClass) {\n  if (isPrimitive(value)) {\n    return false;\n  }\n\n  if (hasToStringTag) {\n    return tryFuncToString(value, toBoolean(allowClass));\n  }\n\n  if (hasNativeClass && castBoolean(allowClass) === false && isES6ClassFn(value)) {\n    return false;\n  }\n\n  const strTag = toStringTag(value);\n\n  return strTag === funcTag || strTag === genTag || strTag === asyncTag;\n};\n\nexport default isFunction;\n","import hasSymbols from 'has-symbol-support-x';\nimport isPrimitive from 'is-primitive';\nimport isDate from 'is-date-object';\nimport isSymbol from 'is-symbol';\nimport isFunction from 'is-function-x';\nimport requireObjectCoercible from 'require-object-coercible-x';\nimport isNil from 'is-nil-x';\n\nconst ZERO = 0;\nconst ONE = 1;\n/* eslint-disable-next-line no-void */\nconst UNDEFINED = void ZERO;\nconst NUMBER = 'number';\nconst STRING = 'string';\nconst DEFAULT = 'default';\n/** @type {StringConstructor} */\nconst StringCtr = STRING.constructor;\n/** @type {NumberConstructor} */\nconst NumberCtr = ZERO.constructor;\n/* eslint-disable-next-line compat/compat */\nconst symToPrimitive = hasSymbols && Symbol.toPrimitive;\n/* eslint-disable-next-line compat/compat */\nconst symValueOf = hasSymbols && Symbol.prototype.valueOf;\n\nconst toStringOrder = ['toString', 'valueOf'];\nconst toNumberOrder = ['valueOf', 'toString'];\nconst orderLength = 2;\n\n/**\n * @param {*} ordinary - The ordinary to convert.\n * @param {*} hint - The hint.\n * @returns {*} - The primitive.\n */\nconst ordinaryToPrimitive = function _ordinaryToPrimitive(ordinary, hint) {\n  requireObjectCoercible(ordinary);\n\n  if (typeof hint !== 'string' || (hint !== NUMBER && hint !== STRING)) {\n    throw new TypeError('hint must be \"string\" or \"number\"');\n  }\n\n  const methodNames = hint === STRING ? toStringOrder : toNumberOrder;\n  let method;\n  let result;\n  for (let i = ZERO; i < orderLength; i += ONE) {\n    method = ordinary[methodNames[i]];\n\n    if (isFunction(method)) {\n      result = method.call(ordinary);\n\n      if (isPrimitive(result)) {\n        return result;\n      }\n    }\n  }\n\n  throw new TypeError('No default value');\n};\n\n/**\n * @param {*} object - The object.\n * @param {*} property - The property.\n * @returns {undefined|Function} - The method.\n */\nconst getMethod = function _getMethod(object, property) {\n  const func = object[property];\n\n  if (isNil(func) === false) {\n    if (isFunction(func) === false) {\n      throw new TypeError(`${func} returned for property ${property} of object ${object} is not a function`);\n    }\n\n    return func;\n  }\n\n  return UNDEFINED;\n};\n\n/**\n * Get the hint.\n *\n * @param {*} value - The value to compare.\n * @param {boolean} supplied - Was a value supplied.\n * @returns {string} - The hint string.\n */\nconst getHint = function getHint(value, supplied) {\n  if (supplied) {\n    if (value === StringCtr) {\n      return STRING;\n    }\n\n    if (value === NumberCtr) {\n      return NUMBER;\n    }\n  }\n\n  return DEFAULT;\n};\n\n/**\n * Get the primitive from the exotic.\n *\n * @param {*} value - The exotic.\n * @returns {*} - The primitive.\n */\nconst getExoticToPrim = function getExoticToPrim(value) {\n  if (hasSymbols) {\n    if (symToPrimitive) {\n      return getMethod(value, symToPrimitive);\n    }\n\n    if (isSymbol(value)) {\n      return symValueOf;\n    }\n  }\n\n  return UNDEFINED;\n};\n\n/**\n * This method converts a JavaScript object to a primitive value.\n * Note: When toPrimitive is called with no hint, then it generally behaves as\n * if the hint were Number. However, objects may over-ride this behaviour by\n * defining a @@toPrimitive method. Of the objects defined in this specification\n * only Date objects (see 20.3.4.45) and Symbol objects (see 19.4.3.4) over-ride\n * the default ToPrimitive behaviour. Date objects treat no hint as if the hint\n * were String.\n *\n * @param {*} input - The input to convert.\n * @param {NumberConstructor|StringConstructor} [preferredType] - The preferred type (String or Number).\n * @throws {TypeError} If unable to convert input to a primitive.\n * @returns {string|number} The converted input as a primitive.\n * @see {http://www.ecma-international.org/ecma-262/6.0/#sec-toprimitive}\n */\nconst toPrimitive = function toPrimitive(input, preferredType) {\n  if (isPrimitive(input)) {\n    return input;\n  }\n\n  const hint = getHint(preferredType, arguments.length > ONE);\n  const exoticToPrim = getExoticToPrim(input);\n\n  if (typeof exoticToPrim !== 'undefined') {\n    const result = exoticToPrim.call(input, hint);\n\n    if (isPrimitive(result)) {\n      return result;\n    }\n\n    throw new TypeError('unable to convert exotic object to primitive');\n  }\n\n  const newHint = hint === DEFAULT && (isDate(input) || isSymbol(input)) ? STRING : hint;\n\n  return ordinaryToPrimitive(input, newHint === DEFAULT ? NUMBER : newHint);\n};\n\nexport default toPrimitive;\n","/**\n * The constant NaN derived mathematically by 0 / 0.\n *\n * @type number\n */\nexport default 0 / 0;\n","import NAN from 'nan-x';\nimport toStr from 'to-string-x';\nimport trimLeft, {trimLeft2016} from 'trim-left-x';\n\nconst nativeParseInt = parseInt;\n/**  @type {Function} */\nconst castNumber = (0).constructor;\n// noinspection JSPotentiallyInvalidConstructorUsage\nconst {charAt} = '';\nconst hexRegex = /^[-+]?0[xX]/;\nconst {test} = hexRegex;\n\n/**\n * This method parses a string argument and returns an integer of the specified\n * radix (the base in mathematical numeral systems). (ES2016).\n *\n * @param {string} [string] - The value to parse. If the string argument is not a\n *  string, then it is converted to a string (using the ToString abstract\n *  operation). Leading whitespace in the string argument is ignored.\n * @param {number} [radix] - An integer between 2 and 36 that represents the radix\n *  (the base in mathematical numeral systems) of the above mentioned string.\n *  Specify 10 for the decimal numeral system commonly used by humans. Always\n *  specify this parameter to eliminate reader confusion and to guarantee\n *  predictable behavior. Different implementations produce different results\n *  when a radix is not specified, usually defaulting the value to 10.\n * @throws {TypeError} If target is a Symbol or is not coercible.\n * @returns {number} An integer number parsed from the given string. If the first\n *  character cannot be converted to a number, NaN is returned.\n */\nexport function parseInt2016(string, radix) {\n  const str = trimLeft2016(toStr(string));\n\n  return nativeParseInt(str, castNumber(radix) || (test.call(hexRegex, str) ? 16 : 10));\n}\n\n/**\n * This method parses a string argument and returns an integer of the specified\n * radix (the base in mathematical numeral systems). (ES2018).\n *\n * @param {string} [string] - The value to parse. If the string argument is not a\n *  string, then it is converted to a string (using the ToString abstract\n *  operation). Leading whitespace in the string argument is ignored.\n * @param {number} [radix] - An integer between 2 and 36 that represents the radix\n *  (the base in mathematical numeral systems) of the above mentioned string.\n *  Specify 10 for the decimal numeral system commonly used by humans. Always\n *  specify this parameter to eliminate reader confusion and to guarantee\n *  predictable behavior. Different implementations produce different results\n *  when a radix is not specified, usually defaulting the value to 10.\n * @throws {TypeError} If target is a Symbol or is not coercible.\n * @returns {number} An integer number parsed from the given string. If the first\n *  character cannot be converted to a number, NaN is returned.\n */\nconst parseInt2018 = function parseInt2018(string, radix) {\n  const str = trimLeft(toStr(string));\n\n  if (charAt.call(str, 0) === '\\u180E') {\n    return NAN;\n  }\n\n  return nativeParseInt(str, castNumber(radix) || (test.call(hexRegex, str) ? 16 : 10));\n};\n\nexport default parseInt2018;\n","import isSymbol from 'is-symbol';\nimport toPrimitive from 'to-primitive-x';\nimport trim, {trim2016} from 'trim-x';\nimport $parseInt, {parseInt2016} from 'parse-int-x';\nimport NAN from 'nan-x';\n\nconst binaryRadix = 2;\nconst octalRadix = 8;\nconst testCharsCount = 2;\nconst ERROR_MESSAGE = 'Cannot convert a Symbol value to a number';\n\n/** @type {NumberConstructor} */\nconst castNumber = testCharsCount.constructor;\nconst pStrSlice = ERROR_MESSAGE.slice;\n\nconst binaryRegex = /^0b[01]+$/i;\nconst RegExpConstructor = binaryRegex.constructor;\n// Note that in IE 8, RegExp.prototype.test doesn't seem to exist: ie, \"test\" is\n// an own property of regexes. wtf.\nconst {test} = binaryRegex;\nconst isBinary = function _isBinary(value) {\n  return test.call(binaryRegex, value);\n};\n\nconst octalRegex = /^0o[0-7]+$/i;\nconst isOctal = function _isOctal(value) {\n  return test.call(octalRegex, value);\n};\n\nconst nonWSregex2016 = new RegExpConstructor('[\\u0085\\u200b\\ufffe]', 'g');\nconst hasNonWS2016 = function _hasNonWS(value) {\n  return test.call(nonWSregex2016, value);\n};\n\nconst nonWSregex2018 = new RegExpConstructor('[\\u0085\\u180e\\u200b\\ufffe]', 'g');\nconst hasNonWS2018 = function _hasNonWS(value) {\n  return test.call(nonWSregex2018, value);\n};\n\nconst invalidHexLiteral = /^[-+]0x[0-9a-f]+$/i;\nconst isInvalidHexLiteral = function _isInvalidHexLiteral(value) {\n  return test.call(invalidHexLiteral, value);\n};\n\n/**\n * This method converts argument to a value of type Number. (ES2016).\n *\n * @param {*} [argument] - The argument to convert to a number.\n * @throws {TypeError} - If argument is a Symbol or not coercible.\n * @returns {*} The argument converted to a number.\n */\nexport function toNumber2016(argument) {\n  const value = toPrimitive(argument, Number);\n\n  if (isSymbol(value)) {\n    throw new TypeError(ERROR_MESSAGE);\n  }\n\n  if (typeof value === 'string') {\n    if (isBinary(value)) {\n      return toNumber2016(parseInt2016(pStrSlice.call(value, testCharsCount), binaryRadix));\n    }\n\n    if (isOctal(value)) {\n      return toNumber2016(parseInt2016(pStrSlice.call(value, testCharsCount), octalRadix));\n    }\n\n    if (hasNonWS2016(value) || isInvalidHexLiteral(value)) {\n      return NAN;\n    }\n\n    const trimmed = trim2016(value);\n\n    if (trimmed !== value) {\n      return toNumber2016(trimmed);\n    }\n  }\n\n  return castNumber(value);\n}\n\n/**\n * This method converts argument to a value of type Number. (ES2018).\n *\n * @param {*} [argument] - The argument to convert to a number.\n * @throws {TypeError} - If argument is a Symbol or not coercible.\n * @returns {*} The argument converted to a number.\n */\nconst toNumber2018 = function toNumber2018(argument) {\n  const value = toPrimitive(argument, castNumber);\n\n  if (isSymbol(value)) {\n    throw new TypeError(ERROR_MESSAGE);\n  }\n\n  if (typeof value === 'string') {\n    if (isBinary(value)) {\n      return toNumber2018($parseInt(pStrSlice.call(value, testCharsCount), binaryRadix));\n    }\n\n    if (isOctal(value)) {\n      return toNumber2018($parseInt(pStrSlice.call(value, testCharsCount), octalRadix));\n    }\n\n    if (hasNonWS2018(value) || isInvalidHexLiteral(value)) {\n      return NAN;\n    }\n\n    const trimmed = trim(value);\n\n    if (trimmed !== value) {\n      return toNumber2018(trimmed);\n    }\n  }\n\n  return castNumber(value);\n};\n\nexport default toNumber2018;\n","/**\n * This method determines whether the passed value is NaN and its type is\n * `Number`. It is a more robust version of the original, global isNaN().\n *\n * @param {*} [value] - The value to be tested for NaN.\n * @returns {boolean} `true` if the given value is NaN and its type is Number;\n *  otherwise, `false`.\n */\nconst isNaN = function isNaN(value) {\n  /* eslint-disable-next-line no-self-compare */\n  return value !== value;\n};\n\nexport default isNaN;\n","import numberIsNaN from 'is-nan-x';\nimport INFINITY from 'infinity-x';\n\n/**\n * This method determines whether the passed value is a finite number.\n *\n * @param {*} [number] - The value to be tested for finiteness.\n * @returns {boolean} A Boolean indicating whether or not the given value is a finite number.\n */\nconst isFinite = function isFinite(number) {\n  return typeof number === 'number' && numberIsNaN(number) === false && number !== INFINITY && number !== -INFINITY;\n};\n\nexport default isFinite;\n","/**\n * The constant value Infinity derived mathematically by 1 / 0.\n *\n * @type number\n */\nexport default 1 / 0;\n","import toNumber, {toNumber2016} from 'to-number-x';\nimport numberIsNaN from 'is-nan-x';\n\n/**\n * This method returns the sign of a number, indicating whether the number is positive,\n * negative or zero. (ES2016).\n *\n * @param {*} x - A number.\n * @returns {number} A number representing the sign of the given argument. If the argument\n * is a positive number, negative number, positive zero or negative zero, the function will\n * return 1, -1, 0 or -0 respectively. Otherwise, NaN is returned.\n */\nexport function sign2016(x) {\n  const n = toNumber2016(x);\n\n  if (n === 0 || numberIsNaN(n)) {\n    return n;\n  }\n\n  return n > 0 ? 1 : -1;\n}\n\n/**\n * This method returns the sign of a number, indicating whether the number is positive,\n * negative or zero. (ES2018).\n *\n * @param {*} x - A number.\n * @returns {number} A number representing the sign of the given argument. If the argument\n * is a positive number, negative number, positive zero or negative zero, the function will\n * return 1, -1, 0 or -0 respectively. Otherwise, NaN is returned.\n */\nconst sign2018 = function sign2018(x) {\n  const n = toNumber(x);\n\n  if (n === 0 || numberIsNaN(n)) {\n    return n;\n  }\n\n  return n > 0 ? 1 : -1;\n};\n\nexport default sign2018;\n","import toNumber, {toNumber2016} from 'to-number-x';\nimport numberIsNaN from 'is-nan-x';\nimport numberIsFinite from 'is-finite-x';\nimport mathSign, {sign2016} from 'math-sign-x';\n\nconst {abs, floor} = Math;\n\n/**\n * Converts `value` to an integer. (ES2016).\n *\n * @param {*} value - The value to convert.\n * @returns {number} Returns the converted integer.\n */\nexport function toInteger2016(value) {\n  const number = toNumber2016(value);\n\n  if (numberIsNaN(number)) {\n    return 0;\n  }\n\n  if (number === 0 || numberIsFinite(number) === false) {\n    return number;\n  }\n\n  return sign2016(number) * floor(abs(number));\n}\n\n/**\n * Converts `value` to an integer. (ES2018).\n *\n * @param {*} value - The value to convert.\n * @returns {number} Returns the converted integer.\n */\nconst toInteger2018 = function toInteger2018(value) {\n  const number = toNumber(value);\n\n  if (numberIsNaN(number)) {\n    return 0;\n  }\n\n  if (number === 0 || numberIsFinite(number) === false) {\n    return number;\n  }\n\n  return mathSign(number) * floor(abs(number));\n};\n\nexport default toInteger2018;\n","import isFunction from 'is-function-x';\nimport isPrimitive from 'is-primitive';\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not a\n * primitive and not a function.\n *\n * @param {*} [value] - The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nconst isObjectLike = function isObjectLike(value) {\n  return isPrimitive(value) === false && isFunction(value, true) === false;\n};\n\nexport default isObjectLike;\n","import requireObjectCoercible from 'require-object-coercible-x';\n\nconst castObject = {}.constructor;\n\n/**\n * The abstract operation ToObject converts argument to a value of\n * type Object.\n *\n * @param {*} value - The `value` to convert.\n * @throws {TypeError} If `value` is a `null` or `undefined`.\n * @returns {!object} The `value` converted to an object.\n */\nconst toObject = function toObject(value) {\n  return castObject(requireObjectCoercible(value));\n};\n\nexport default toObject;\n","import hasSymbols from 'has-symbol-support-x';\nimport toPrimitive from 'to-primitive-x';\nimport toStr from 'to-string-x';\n\n/**\n * This method Converts argument to a value that can be used as a property key.\n *\n * @param {*} argument - The argument to convert to a property key.\n * @throws {TypeError} If argument is not a symbol and is not coercible to a string.\n * @returns {string|Symbol} The converted argument.\n */\nconst toPropertyKey = function toPropertyKey(argument) {\n  const key = toPrimitive(argument, String);\n\n  return hasSymbols && typeof key === 'symbol' ? key : toStr(key);\n};\n\nexport default toPropertyKey;\n","import toObject from 'to-object-x';\nimport toPropertyKey from 'to-property-key-x';\nimport attempt from 'attempt-x';\nimport hasSymbolSupport from 'has-symbol-support-x';\nimport owns from 'has-own-property-x';\nimport isPrimitive from 'is-primitive';\nimport isString from 'is-string';\nimport isIndex from 'is-index-x';\nimport propertyIsEnumerable from 'property-is-enumerable-x';\n\n/** @type {ObjectConstructor} */\nconst castObject = {}.constructor;\n/** @type {BooleanConstructor} */\nconst castBoolean = true.constructor;\nconst nativeGOPD = typeof castObject.getOwnPropertyDescriptor === 'function' && castObject.getOwnPropertyDescriptor;\nlet getOPDFallback1;\nlet getOPDFallback2;\n\n// ES5 15.2.3.3\n// http://es5.github.com/#x15.2.3.3\n\nconst doesGOPDWork = function doesGOPDWork(object, prop) {\n  object[toPropertyKey(prop)] = 0;\n  const testResult = attempt(nativeGOPD, object, prop);\n\n  return testResult.threw === false && testResult.value.value === 0;\n};\n\n// check whether getOwnPropertyDescriptor works if it's given. Otherwise, shim partially.\n/**\n * This method returns a property descriptor for an own property (that is,\n * one directly present on an object and not in the object's prototype chain)\n * of a given object.\n *\n * @param {*} object - The object in which to look for the property.\n * @param {*} property - The name of the property whose description is to be retrieved.\n * @returns {object} A property descriptor of the given property if it exists on the object, undefined otherwise.\n */\nlet $getOwnPropertyDescriptor;\n\nif (nativeGOPD) {\n  const doc = typeof document !== 'undefined' && document;\n  const getOPDWorksOnDom = doc ? doesGOPDWork(doc.createElement('div'), 'sentinel') : true;\n\n  if (getOPDWorksOnDom) {\n    const res = attempt(nativeGOPD, castObject('abc'), 1);\n    const worksWithStr = res.threw === false && res.value && res.value.value === 'b';\n\n    if (worksWithStr) {\n      const getOPDWorksOnObject = doesGOPDWork({}, 'sentinel');\n\n      if (getOPDWorksOnObject) {\n        const worksWithPrim = attempt(nativeGOPD, 42, 'name').threw === false;\n        /* eslint-disable-next-line compat/compat */\n        const worksWithObjSym = hasSymbolSupport && doesGOPDWork({}, castObject(Symbol('')));\n\n        if (worksWithObjSym) {\n          if (worksWithPrim) {\n            $getOwnPropertyDescriptor = nativeGOPD;\n          } else {\n            $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n              return nativeGOPD(toObject(object), property);\n            };\n          }\n        } else if (worksWithPrim) {\n          $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n            return nativeGOPD(object, toPropertyKey(property));\n          };\n        } else {\n          $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n            return nativeGOPD(toObject(object), toPropertyKey(property));\n          };\n        }\n      } else {\n        getOPDFallback1 = nativeGOPD;\n      }\n    } else {\n      getOPDFallback2 = nativeGOPD;\n    }\n  }\n}\n\nif (castBoolean($getOwnPropertyDescriptor) === false || getOPDFallback1 || getOPDFallback2) {\n  const prototypeOfObject = castObject.prototype;\n\n  // If JS engine supports accessors creating shortcuts.\n  let lookupGetter;\n  let lookupSetter;\n  const supportsAccessors = owns(prototypeOfObject, '__defineGetter__');\n\n  if (supportsAccessors) {\n    /* eslint-disable-next-line no-underscore-dangle */\n    const lg = prototypeOfObject.__lookupGetter__;\n    /* eslint-disable-next-line no-underscore-dangle */\n    const ls = prototypeOfObject.__lookupSetter__;\n    lookupGetter = function $lookupGetter(object, property) {\n      return lg.call(object, property);\n    };\n\n    lookupSetter = function $lookupSetter(object, property) {\n      return ls.call(object, property);\n    };\n  }\n\n  $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n    const obj = toObject(object);\n    const propKey = toPropertyKey(property);\n\n    let result;\n\n    // make a valiant attempt to use the real getOwnPropertyDescriptor for I8's DOM elements.\n    if (getOPDFallback1) {\n      result = attempt.call(castObject, getOPDFallback1, obj, propKey);\n\n      if (result.threw === false) {\n        return result.value;\n      }\n      // try the shim if the real one doesn't work\n    }\n\n    const isStringIndex = isString(obj) && isIndex(propKey, obj.length);\n\n    if (getOPDFallback2 && isStringIndex === false) {\n      result = attempt.call(castObject, getOPDFallback2, obj, propKey);\n\n      if (result.threw === false) {\n        return result.value;\n      }\n      // try the shim if the real one doesn't work\n    }\n\n    /* eslint-disable-next-line no-void */\n    let descriptor = void 0;\n\n    // If object does not owns property return undefined immediately.\n    if (isStringIndex === false && owns(obj, propKey) === false) {\n      return descriptor;\n    }\n\n    // If object has a property then it's for sure `configurable`, and\n    // probably `enumerable`. Detect enumerability though.\n    descriptor = {\n      configurable: isPrimitive(object) === false && isStringIndex === false,\n      enumerable: propertyIsEnumerable(obj, propKey),\n    };\n\n    // If JS engine supports accessor properties then property may be a\n    // getter or setter.\n    if (supportsAccessors) {\n      // Unfortunately `__lookupGetter__` will return a getter even\n      // if object has own non getter property along with a same named\n      // inherited getter. To avoid misbehavior we temporary remove\n      // `__proto__` so that `__lookupGetter__` will return getter only\n      // if it's owned by an object.\n      /* eslint-disable-next-line no-proto */\n      const prototype = obj.__proto__;\n      const notPrototypeOfObject = obj !== prototypeOfObject;\n\n      // avoid recursion problem, breaking in Opera Mini when\n      // Object.getOwnPropertyDescriptor(Object.prototype, 'toString')\n      // or any other Object.prototype accessor\n      if (notPrototypeOfObject) {\n        /* eslint-disable-next-line no-proto */\n        obj.__proto__ = prototypeOfObject;\n      }\n\n      const getter = lookupGetter(obj, propKey);\n      const setter = lookupSetter(obj, propKey);\n\n      if (notPrototypeOfObject) {\n        // Once we have getter and setter we can put values back.\n        /* eslint-disable-next-line no-proto */\n        obj.__proto__ = prototype;\n      }\n\n      if (getter || setter) {\n        if (getter) {\n          descriptor.get = getter;\n        }\n\n        if (setter) {\n          descriptor.set = setter;\n        }\n\n        // If it was accessor property we're done and return here\n        // in order to avoid adding `value` to the descriptor.\n        return descriptor;\n      }\n    }\n\n    // If we got this far we know that object has an own property that is\n    // not an accessor so we set it as a value and return descriptor.\n    if (isStringIndex) {\n      descriptor.value = obj.charAt(propKey);\n      descriptor.writable = false;\n    } else {\n      descriptor.value = obj[propKey];\n      descriptor.writable = true;\n    }\n\n    return descriptor;\n  };\n}\n\nconst gOPS = $getOwnPropertyDescriptor;\n\nexport default gOPS;\n","import toObject from 'to-object-x';\nimport toPropertyKey from 'to-property-key-x';\n\nconst hop = {}.hasOwnProperty;\n\n/**\n * The `hasOwnProperty` method returns a boolean indicating whether\n * the `object` has the specified `property`. Does not attempt to fix known\n * issues in older browsers, but does ES6ify the method.\n *\n * @param {!object} object - The object to test.\n * @throws {TypeError} If object is null or undefined.\n * @param {string|number|Symbol} property - The name or Symbol of the property to test.\n * @returns {boolean} `true` if the property is set on `object`, else `false`.\n */\nconst hasOwnProperty = function hasOwnProperty(object, property) {\n  return hop.call(toObject(object), toPropertyKey(property));\n};\n\nexport default hasOwnProperty;\n","import hasSymbols from 'has-symbol-support-x';\nimport isSymbol from 'is-symbol';\n\n/* eslint-disable-next-line compat/compat */\nconst pToString = hasSymbols && Symbol.prototype.toString;\nconst isSymbolFn = typeof pToString === 'function' && isSymbol;\n/** @type {Function} */\nconst castString = ''.constructor;\n\n/**\n * The abstract operation ToString converts argument to a value of type String,\n * however the specification states that if the argument is a Symbol then a\n * 'TypeError' is thrown. This version also allows Symbols be converted to\n * a string. Other uncoercible exotics will still throw though.\n *\n * @param {*} [value] - The value to convert to a string.\n * @returns {string} The converted value.\n */\nconst toStringSymbolsSupported = function toStringSymbolsSupported(value) {\n  return isSymbolFn && isSymbolFn(value) ? pToString.call(value) : castString(value);\n};\n\nexport default toStringSymbolsSupported;\n","import toNumber from 'to-number-x';\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * This method clamp a number to min and max limits inclusive.\n *\n * @param {number} value - The number to be clamped.\n * @param {number} [min=0] - The minimum number.\n * @param {number} max - The maximum number.\n * @throws {RangeError} If min > max.\n * @returns {number} The clamped number.\n */\n// eslint-enable jsdoc/check-param-names\nconst clamp = function clamp(value) {\n  const number = toNumber(value);\n  const argsLength = arguments.length;\n\n  if (argsLength < 2) {\n    return number;\n  }\n\n  /* eslint-disable-next-line prefer-rest-params */\n  let min = toNumber(arguments[1]);\n  let max;\n\n  if (argsLength < 3) {\n    max = min;\n    min = 0;\n  } else {\n    /* eslint-disable-next-line prefer-rest-params */\n    max = toNumber(arguments[2]);\n  }\n\n  if (min > max) {\n    throw new RangeError('\"min\" must be less than \"max\"');\n  }\n\n  if (number < min) {\n    return min;\n  }\n\n  if (number > max) {\n    return max;\n  }\n\n  return number;\n};\n\nexport default clamp;\n","import safeToString from 'to-string-symbols-supported-x';\nimport toInteger from 'to-integer-x';\nimport toNumber from 'to-number-x';\nimport mathClamp from 'math-clamp-x';\n\nconst MAX_SAFE_INTEGER = 9007199254740991;\nconst reIsUint = /^(?:0|[1-9]\\d*)$/;\nconst rxTest = reIsUint.test;\n\n/**\n * This method determines whether the passed value is a zero based index.\n * JavaScript arrays are zero-indexed: the first element of an array is at\n * index 0, and the last element is at the index equal to the value of the\n * array's length property minus 1.\n *\n * @param {number|string} value - The value to be tested for being a zero based index.\n * @param {number} [length=MAX_SAFE_INTEGER] - The length that sets the upper bound.\n * @returns {boolean} A Boolean indicating whether or not the given value is a\n * zero based index within bounds.\n */\nconst isIndex = function isIndex(value, length) {\n  const string = safeToString(value);\n\n  if (rxTest.call(reIsUint, string) === false) {\n    return false;\n  }\n\n  const number = toNumber(string);\n\n  if (arguments.length > 1) {\n    return number < mathClamp(toInteger(length), MAX_SAFE_INTEGER);\n  }\n\n  return number < MAX_SAFE_INTEGER;\n};\n\nexport default isIndex;\n","import toPropertyKey from 'to-property-key-x';\nimport toObject from 'to-object-x';\n\nconst propIsEnumerable = {}.propertyIsEnumerable;\n\n/**\n * This method returns a Boolean indicating whether the specified property is\n * enumerable. Does not attempt to fix bugs in IE<9 or old Opera, otherwise it\n * does ES6ify the method.\n *\n * @param {!object} object - The object on which to test the property.\n * @param {string|Symbol} property - The name of the property to test.\n * @throws {TypeError} If target is null or undefined.\n * @returns {boolean} A Boolean indicating whether the specified property is\n *  enumerable.\n */\nconst propertyIsEnumerable = function propertyIsEnumerable(object, property) {\n  return propIsEnumerable.call(toObject(object), toPropertyKey(property));\n};\n\nexport default propertyIsEnumerable;\n","import attempt from 'attempt-x';\nimport toObject from 'to-object-x';\nimport toPropertyKey from 'to-property-key-x';\nimport has from 'has-own-property-x';\nimport isFunction from 'is-function-x';\nimport assertIsObject from 'assert-is-object-x';\n\n/** @type {BooleanConstructor} */\nconst castBoolean = true.constructor;\nconst nativeDefProp = typeof Object.defineProperty === 'function' && Object.defineProperty;\nlet definePropertyFallback;\n\nconst toPropertyDescriptor = function _toPropertyDescriptor(desc) {\n  const object = toObject(desc);\n  const descriptor = {};\n\n  if (has(object, 'enumerable')) {\n    descriptor.enumerable = castBoolean(object.enumerable);\n  }\n\n  if (has(object, 'configurable')) {\n    descriptor.configurable = castBoolean(object.configurable);\n  }\n\n  if (has(object, 'value')) {\n    descriptor.value = object.value;\n  }\n\n  if (has(object, 'writable')) {\n    descriptor.writable = castBoolean(object.writable);\n  }\n\n  if (has(object, 'get')) {\n    const getter = object.get;\n\n    if (typeof getter !== 'undefined' && isFunction(getter) === false) {\n      throw new TypeError('getter must be a function');\n    }\n\n    descriptor.get = getter;\n  }\n\n  if (has(object, 'set')) {\n    const setter = object.set;\n\n    if (typeof setter !== 'undefined' && isFunction(setter) === false) {\n      throw new TypeError('setter must be a function');\n    }\n\n    descriptor.set = setter;\n  }\n\n  if ((has(descriptor, 'get') || has(descriptor, 'set')) && (has(descriptor, 'value') || has(descriptor, 'writable'))) {\n    throw new TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n  }\n\n  return descriptor;\n};\n\n// ES5 15.2.3.6\n// http://es5.github.com/#x15.2.3.6\n\n// Patch for WebKit and IE8 standard mode\n// Designed by hax <hax.github.com>\n// related issue: https://github.com/es-shims/es5-shim/issues#issue/5\n// IE8 Reference:\n//     http://msdn.microsoft.com/en-us/library/dd282900.aspx\n//     http://msdn.microsoft.com/en-us/library/dd229916.aspx\n// WebKit Bugs:\n//     https://bugs.webkit.org/show_bug.cgi?id=36423\n\n/**\n * This method defines a new property directly on an object, or modifies an\n * existing property on an object, and returns the object.\n *\n * @param {object} object - The object on which to define the property.\n * @param {string} property - The name of the property to be defined or modified.\n * @param {object} descriptor - The descriptor for the property being defined or modified.\n * @returns {object} The object that was passed to the function.\n * });.\n */\nlet $defineProperty;\n\n// check whether defineProperty works if it's given. Otherwise, shim partially.\nif (nativeDefProp) {\n  const testWorksWith = function _testWorksWith(object) {\n    const testResult = attempt(nativeDefProp, object, 'sentinel', {});\n\n    return testResult.threw === false && testResult.value === object && 'sentinel' in object;\n  };\n\n  const doc = typeof document !== 'undefined' && document;\n\n  if (testWorksWith({}) && (castBoolean(doc) === false || testWorksWith(doc.createElement('div')))) {\n    $defineProperty = function defineProperty(object, property, descriptor) {\n      return nativeDefProp(assertIsObject(object), toPropertyKey(property), toPropertyDescriptor(descriptor));\n    };\n  } else {\n    definePropertyFallback = nativeDefProp;\n  }\n}\n\nif (castBoolean(nativeDefProp) === false || definePropertyFallback) {\n  const prototypeOfObject = Object.prototype;\n\n  // If JS engine supports accessors creating shortcuts.\n  let defineGetter;\n  let defineSetter;\n  let lookupGetter;\n  let lookupSetter;\n  const supportsAccessors = has(prototypeOfObject, '__defineGetter__');\n\n  if (supportsAccessors) {\n    /* eslint-disable-next-line no-underscore-dangle,no-restricted-properties */\n    defineGetter = prototypeOfObject.__defineGetter__;\n    /* eslint-disable-next-line no-underscore-dangle,no-restricted-properties */\n    defineSetter = prototypeOfObject.__defineSetter__;\n    /* eslint-disable-next-line no-underscore-dangle */\n    lookupGetter = prototypeOfObject.__lookupGetter__;\n    /* eslint-disable-next-line no-underscore-dangle */\n    lookupSetter = prototypeOfObject.__lookupSetter__;\n  }\n\n  $defineProperty = function defineProperty(object, property, descriptor) {\n    assertIsObject(object);\n    const propKey = toPropertyKey(property);\n    const propDesc = toPropertyDescriptor(descriptor);\n\n    // make a valiant attempt to use the real defineProperty for IE8's DOM elements.\n    if (definePropertyFallback) {\n      const result = attempt.call(Object, definePropertyFallback, object, propKey, propDesc);\n\n      if (result.threw === false) {\n        return result.value;\n      }\n      // try the shim if the real one doesn't work\n    }\n\n    // If it's a data property.\n    if (has(propDesc, 'value')) {\n      // fail silently if 'writable', 'enumerable', or 'configurable' are requested but not supported\n      if (supportsAccessors && (lookupGetter.call(object, propKey) || lookupSetter.call(object, propKey))) {\n        // As accessors are supported only on engines implementing\n        // `__proto__` we can safely override `__proto__` while defining\n        // a property to make sure that we don't hit an inherited accessor.\n        /* eslint-disable-next-line no-proto */\n        const prototype = object.__proto__;\n        /* eslint-disable-next-line no-proto */\n        object.__proto__ = prototypeOfObject;\n        // Deleting a property anyway since getter / setter may be defined on object itself.\n        delete object[propKey];\n        object[propKey] = propDesc.value;\n        // Setting original `__proto__` back now.\n        /* eslint-disable-next-line no-proto */\n        object.__proto__ = prototype;\n      } else {\n        object[propKey] = propDesc.value;\n      }\n    } else {\n      if (supportsAccessors === false && (propDesc.get || propDesc.set)) {\n        throw new TypeError('getters & setters can not be defined on this javascript engine');\n      }\n\n      // If we got that far then getters and setters can be defined !!\n      if (propDesc.get) {\n        defineGetter.call(object, propKey, propDesc.get);\n      }\n\n      if (propDesc.set) {\n        defineSetter.call(object, propKey, propDesc.set);\n      }\n    }\n\n    return object;\n  };\n}\n\nconst defProp = $defineProperty;\n\nexport default defProp;\n","import safeToString from 'to-string-symbols-supported-x';\nimport isPrimitive from 'is-primitive';\n\n/**\n * Tests `value` to see if it is an object, throws a `TypeError` if it is\n * not. Otherwise returns the `value`.\n *\n * @param {*} value - The argument to be tested.\n * @throws {TypeError} Throws if `value` is not an object.\n * @returns {*} Returns `value` if it is an object.\n */\nconst assertIsObject = function assertIsObject(value) {\n  if (isPrimitive(value)) {\n    throw new TypeError(`${safeToString(value)} is not an object`);\n  }\n\n  return value;\n};\n\nexport default assertIsObject;\n","import attempt from 'attempt-x';\nimport toInteger from 'to-integer-x';\nimport requireObjectCoercible from 'require-object-coercible-x';\nimport toStr from 'to-string-x';\nimport isRegExp from 'is-regexp-x';\n\nconst ERR_MSG = 'Cannot call method \"startsWith\" with a regex';\nconst sw = ERR_MSG.startsWith;\nconst nativeStartsWith = typeof sw === 'function' && sw;\n\nlet isWorking;\n\nif (nativeStartsWith) {\n  let res = attempt.call('/a/', nativeStartsWith, /a/);\n  isWorking = res.threw;\n\n  if (isWorking) {\n    res = attempt.call('abc', nativeStartsWith, 'a', 1 / 0);\n    isWorking = res.threw === false && res.value === false;\n  }\n\n  if (isWorking) {\n    res = attempt.call(123, nativeStartsWith, '1');\n    isWorking = res.threw === false && res.value === true;\n  }\n\n  if (isWorking) {\n    res = attempt.call(null, nativeStartsWith, 'n');\n    isWorking = res.threw;\n  }\n}\n\n/**\n * This method determines whether a string begins with the characters of a\n * specified string, returning true or false as appropriate.\n *\n * @param {string} string - The string to be search.\n * @throws {TypeError} If string is null or undefined.\n * @param {string} searchString - The characters to be searched for at the start of this string.\n * @throws {TypeError} If searchString is a RegExp.\n * @param {number} [position] -The position in this string at which to begin searching for searchString; defaults to 0.\n * @returns {boolean} `true` if the given characters are found at the beginning of the string; otherwise, `false`.\n */\nlet $startsWith;\n\nif (isWorking) {\n  $startsWith = function startsWith(string, searchString) {\n    const str = requireObjectCoercible(string);\n\n    if (isRegExp(searchString)) {\n      throw new TypeError(ERR_MSG);\n    }\n\n    const args = [searchString];\n\n    if (arguments.length > 2) {\n      /* eslint-disable-next-line prefer-rest-params,prefer-destructuring */\n      args[1] = arguments[2];\n    }\n\n    return nativeStartsWith.apply(str, args);\n  };\n} else {\n  // Firefox (< 37?) and IE 11 TP have a noncompliant startsWith implementation\n  $startsWith = function startsWith(string, searchString) {\n    const str = toStr(requireObjectCoercible(string));\n\n    if (isRegExp(searchString)) {\n      throw new TypeError(ERR_MSG);\n    }\n\n    const searchStr = toStr(searchString);\n    /* eslint-disable-next-line prefer-rest-params */\n    const position = arguments.length > 2 ? toInteger(arguments[2]) : 0;\n    const start = position > 0 ? position : 0;\n\n    return str.slice(start, start + searchStr.length) === searchStr;\n  };\n}\n\nconst ssw = $startsWith;\n\nexport default ssw;\n","import isObjectLike from 'is-object-like-x';\nimport hasToStringTag from 'has-to-string-tag-x';\nimport has from 'has-own-property-x';\nimport gOPD from 'object-get-own-property-descriptor-x';\nimport defineProperty from 'object-define-property-x';\nimport toStringTag from 'to-string-tag-x';\n\nconst regexExec = /none/.exec;\nconst regexClass = '[object RegExp]';\n\nconst tryRegexExecCall = function tryRegexExec(value, descriptor) {\n  try {\n    value.lastIndex = 0;\n    regexExec.call(value);\n\n    return true;\n  } catch (e) {\n    return false;\n  } finally {\n    defineProperty(value, 'lastIndex', descriptor);\n  }\n};\n\n/**\n * This method tests if a value is a regex.\n *\n * @param {*} value - The value to test.\n * @returns {boolean} `true` if value is a regex; otherwise `false`.\n */\nconst isRegex = function isRegex(value) {\n  if (isObjectLike(value) === false) {\n    return false;\n  }\n\n  if (hasToStringTag === false) {\n    return toStringTag(value) === regexClass;\n  }\n\n  const descriptor = gOPD(value, 'lastIndex');\n  const hasLastIndexDataProperty = descriptor && has(descriptor, 'value');\n\n  if (hasLastIndexDataProperty !== true) {\n    return false;\n  }\n\n  return tryRegexExecCall(value, descriptor);\n};\n\nexport default isRegex;\n"],"sourceRoot":""}